% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/readme2_undergrad.R
\name{undergrad}
\alias{undergrad}
\title{undergrad}
\usage{
undergrad(documentText, wordVecs = NULL, word_quantiles = c(0.1, 0.5,
  0.9), replace_missing = T, replace_regex = list(c("\\\\#", ""),
  c("[[:punct:]]+", ""), c("ing\\\\b", ""), c("s\\\\b", ""), c("ed\\\\b",
  ""), c("ies\\\\b", "y")), unique_terms = T, verbose = T)
}
\arguments{
\item{documentText}{A vector in which each entry corresponds to a ``clean'' document. 
Note that the function will take as a ``word'' all whitespace-separated elements in each vector entry. For example,
\code{"star."} would have to have an exact analogue in the vector corpus, otherwise
it will be dropped in the calculations. It will be more common to space separate punctuation marks (i.e. 
\code{"star."} would become \code{"star ."}), since punctuation marks often have their own entries in the vector database.}

\item{wordVecs}{A matrix where each row denotes a word and each column a word vector. Words should be stored as the rownames of the matrix.}

\item{word_quantiles}{A numeric vector denoting the quantiles (0-1) used to summarize each word vector dimension. Defaults to 10th, 50th and 90th quantiles.}

\item{replace_missing}{If TRUE, attempts to match terms missing from the wordVec corpus with alternate representations.}

\item{replace_regex}{A list of character vectors containing regular expression pairs to be used for generating alternate representations of words to attempt
to match with the wordVec corpus when terms initially cannot be matched.}

\item{unique_terms}{If TRUE, removes duplicate terms from each document - each document is represented only by the presence or absence of a term.}

\item{verbose}{If TRUE, prints updates as function runs}
}
\value{
A data.frame consisting of the \code{word_quantiles} quantiles of the word vectors by document.
 Each row corresonds to a document, and the columns to a particular summary of a particular word vector dimension.
}
\description{
Preprocessing for \code{readme} function - creates a document-feature matrix 
(saved as a data frame in output) to be passed to \code{readme}. Users can either input word-specific vectors 
using the \code{wordVecs_corpus} or \code{wordVecs_corpusPointer} parameters. Primarily intended for users 
wanting control over the pre-processing protocol.
}
\examples{
#set seed 
set.seed(1) 

#Generate synthetic word vector corpus. 
my_wordVecs_corpus <- data.frame(matrix(rnorm(11*50), ncol = 50))
my_wordVecs_corpus <- cbind(c("the","true", "thine", "stars", "are" ,
                              "fire", ".", "to", "own", "self", "be"), 
                          my_wordVecs_corpus)
my_wordVecs_corpus <- data.table::as.data.table(my_wordVecs_corpus)

#Setup ``documents'' 
my_documents <- c(
"the stars are fire .", #document 1 
"to thine own self be true ", #document 2 
"true stars be true ." #document 3
)

#Get document-level word vector summaries. 
my_dfm <- undergrad(documentText = my_documents, wordVecs_corpus = my_wordVecs_corpus)
print( my_dfm ) 

}
